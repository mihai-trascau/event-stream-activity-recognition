%% print_trigger(_/_).
%% print_trigger(all_defined_events).
print_trigger(hla/_).

/*
    CONTEXT FLAGS
*/

score_compute_flag(mean).
%% score_compute_flag(min).

/*
    UTILTIES
*/

%% aggr_score(+score1, +score2, -Res)
%% Returns average of the two scores
aggr_score(Score1, Score2, Res) :- score_compute_flag(mean), Res is (Score1+Score2)/2.

%% aggr_score(+score1, +score2, -Res)
%% Returns the minimum of the two scores
aggr_score(Score1, Score2, Res) :- score_compute_flag(min), Res is min(Score1,Score2).

/*
    CONTEXT MANAGEMENT RULES
*/

%% POSITION DATA
pos_score_diff_threshold(0.5).
pos_score_valid_threshold(0.5).
pos_max_rule_window(2).

%% Validity extension of atomic pos(+Location,meta(+LastUpdate,+Confidence))
%% events, when no complex event (extended interval) is available for extension
r_pos_1 'rule:' pos(U,X,meta(L2, Score))
    <-  (pos(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T1))
        'seq'
        (pos(U,X,meta(L2,Score2)) 'timestamp' t1(T2), t2(T2))
        'fnot'
        (pos(U,X,meta(_,_)) 'timestamp' t1(T3), t2(T1), less_datime(T3,T1))
        'where' (
            pos_score_valid_threshold(ValidThresh),
            Score1 > ValidThresh,
            Score2 > ValidThresh,
            pos_score_diff_threshold(Thresh),
            abs(Score1 - Score2) < Thresh,
            aggr_score(Score1,Score2,Score)
        ).

%% Validity extension of a complex pos(+Location,meta(+LastUpdate,+Confidence))
%% event with a newly added atomic event, subject to rule window constraints
r_pos_2 'rule:' pos(U,X,meta(L2, Score))
    <-  (pos(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'seq'
        (pos(U,X,meta(L2,Score2)) 'timestamp' t1(T3), t2(T3))
        'where' (
            pos_score_valid_threshold(ValidThresh),
            Score2 > ValidThresh,
            pos_max_rule_window(MaxTDiff),
            datime_minus_datime(T3,T2,TDiff),
            TDiff =< MaxTDiff,
            pos_score_diff_threshold(Thresh),
            abs(Score1 - Score2) < Thresh,
            aggr_score(Score1,Score2,Score)
        ).

%% LOW LEVEL ACTIVITY DATA
lla_score_diff_threshold(0.5).
lla_score_valid_threshold(0.5).
lla_max_rule_window(2).

%% Validity extension of atomic lla(+Activity,meta(+LastUpdate,+Confidence))
%% events, when no complex event (extended interval) is available for extension
r_lla_1 'rule:' lla(U,X,meta(L2, Score))
    <-  (lla(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T1))
        'seq'
        (lla(U,X,meta(L2,Score2)) 'timestamp' t1(T2), t2(T2))
        'fnot'
        (lla(U,X,meta(_,_)) 'timestamp' t1(T3), t2(T1), less_datime(T3,T1))
        'where' (
            lla_score_valid_threshold(ValidThresh),
            Score1 > ValidThresh,
            Score2 > ValidThresh,
            lla_score_diff_threshold(Thresh),
            abs(Score1 - Score2) < Thresh,
            aggr_score(Score1,Score2,Score)
        ).

%% Validity extension of a complex lla(+Activity,meta(+LastUpdate,+Confidence))
%% event with a newly added atomic event, subject to rule window constraints
r_lla_2 'rule:' lla(U,X,meta(L2, Score))
    <-  (lla(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'seq'
        (lla(U,X,meta(L2,Score2)) 'timestamp' t1(T3), t2(T3))
        'where' (
            lla_score_valid_threshold(ValidThresh),
            Score2 > ValidThresh,
            lla_max_rule_window(MaxTDiff),
            datime_minus_datime(T3,T2,TDiff),
            TDiff =< MaxTDiff,
            lla_score_diff_threshold(Thresh),
            abs(Score1 - Score2) < Thresh,
            aggr_score(Score1,Score2,Score)
        ).

/*
    DOMAIN RULES
*/

%% TODO - Implement domain specific rules based on the complex events
%% hla_max_rule_window(MaxTDiff),
%% abs(TDiffEnd) =< MaxTDiff,
%% abs(TDiffStart) =< MaxTDiff,
%% L1 \= L2,

hla_max_rule_window(2).
hla_max_gap(5).

r_hla_0 'rule:' hla(U,X,meta(L,ScoreHLA))
    <-  (hla(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T2))
        'parneq'
        (hla(U,X,meta(L2,Score2)) 'timestamp' t1(T3), t2(T4))
        %% 'check' (
        %%     t1(T5), t2(T6), 
        %%     write_term(T5, []),
        %%     write_term(T6, []),
        %%     write_term(T1, []),
        %%     write_term(T2, []),
        %%     write_term(T3, []),
        %%     write_term(T4, []),
        %%     datime_minus_datime(T6,T2,D1),
        %%     datime_minus_datime(T5,T3,D2),
        %%     abs(D1) > 0, abs(D2) > 0
        %% )
        %% 'check'(
        %%     datime_minus_datime(T4,T2,TDiffEnd),
        %%     datime_minus_datime(T3,T1,TDiffStart),
        %%     write('------------------------\n'),
        %%     write_term(TDiffStart, []),
        %%     write_term(TDiffEnd, []),
        %%     write('------------------------\n'),
        %%     ((abs(TDiffStart) + abs(TDiffEnd)) > 0)
        %% )
        'where' (
            %% datime_minus_datime(T4,T2,TDiffEnd),
            %% datime_minus_datime(T3,T1,TDiffStart),
            %% ((abs(TDiffStart) + abs(TDiffEnd)) > 0),
            %% write('caca maca'),
            %% less_datime(T3, T2),
            %% less_datime(T1, T3),
            %% less_datime(T2, T4),
            L is max(L1,L2),
            aggr_score(Score1,Score2,ScoreHLA)
        ).

r_hla_7 'rule:' hla(U,X,meta(L,ScoreHLA))
    <-  (hla(U,X,meta(L1,Score1)) 'timestamp' t1(T1), t2(T2))
        'seq'
        (hla(U,X,meta(L2,Score2)) 'timestamp' t1(T3), t2(T4))
        'where' (
            datime_minus_datime(T3,T2,TGap),
            hla_max_gap(MaxTGap),
            TGap =< MaxTGap,
            %L1 \= L2,
            L is max(L1,L2),
            aggr_score(Score1,Score2,ScoreHLA)
        ).

r_hla_1 'rule:' hla(U,working,meta(L,ScoreHLA))
    <-  (pos(U,work_area,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,sitting,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).

r_hla_2 'rule:' hla(U,relaxing,meta(L,ScoreHLA))
    <-  (pos(U,entertainment,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,sitting,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).

r_hla_3 'rule:' hla(U,relaxing,meta(L,ScoreHLA))
    <-  (pos(U,entertainment,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,lying,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).

r_hla_4 'rule:' hla(U,snacking,meta(L,ScoreHLA))
    <-  (pos(U,snack_area,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,standing,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).

r_hla_5 'rule:' hla(U,snacking,meta(L,ScoreHLA))
    <-  (pos(U,snack_area,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,sitting,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).

r_hla_6 'rule:' hla(U,dining,meta(L,ScoreHLA))
    <-  (pos(U,dining_area,meta(L1,ScorePos)) 'timestamp' t1(T1), t2(T2), less_datime(T1,T2))
        'intersects'
        (lla(U,sitting,meta(L2,ScoreLLA)) 'timestamp' t1(T3), t2(T4), less_datime(T3,T4))
        'where' (
            L is max(L1,L2),
            aggr_score(ScorePos,ScoreLLA,ScoreHLA)
        ).