%% print_trigger(_/_).
print_trigger(all_defined_events).

/*
    ETALIS FLAGS
*/

set_etalis_flags(store_fired_events,on).
set_etalis_flags(logging_to_file,on).

/*
    CONTEXT FLAGS
*/

score_compute_flag(mean).
%% score_compute_flag(min).

default_rule_window(5).

/*
    UTILTIES
*/

%% aggr_score(+score1, +score2, -Res)
%% Returns average of the two scores
aggr_score(Score1, Score2, Res) :- score_compute_flag(mean), Res is (Score1+Score2)/2.

%% aggr_score(+score1, +score2, -Res)
%% Returns the minimum of the two scores
aggr_score(Score1, Score2, Res) :- score_compute_flag(min), Res is min(Score1,Score2).

/*
    CONTEXT MANAGEMENT RULES
*/

%% Composition of pos(+Location,meta(+LastUpdate,+Confidence)) events
r1 'rule:' composed(pos(X, meta(T2, Score))) <- pos(X,meta(T1, Score1)) 'seq' pos(X,meta(T2,Score2)) 'where' aggr_score(Score1,Score2,Score).
r2 'rule:' composed(pos(X, meta(T2, Score))) <- composed(pos(X,meta(T1,Score1))) 'seq' pos(X,meta(T2, Score2))
                                                'where' (
                                                    aggr_score(Score1,Score2,Score),
                                                    retract(composed(pos(X,meta(T1,Score1))))
                                                ).
r3 'rule:' composed(pos(X, meta(T2, Score))) <- composed(pos(X,meta(T1,Score1))) 'seq' composed(pos(X,meta(T2, Score2))) 
                                                'where' (
                                                    aggr_score(Score1,Score2,Score),
                                                    retract(composed(pos(X,meta(T1,Score1))))
                                                ).
event_rule_property(r1,event_rule_window,5).
event_rule_property(r2,event_rule_window,5).
event_rule_property(r3,event_rule_window,5).

%% Composition of lla(+LowLevelActivity,meta(+LastUpdate,+Confidence)) events
r4 'rule:' composed(lla(X, meta(T2, Score))) <- lla(X,meta(T1, Score1)) 'seq' lla(X,meta(T2,Score2)) 'where' aggr_score(Score1,Score2,Score).
r5 'rule:' composed(lla(X, meta(T2, Score))) <- composed(lla(X,meta(T1,Score1))) 'seq' lla(X,meta(T2, Score2))
                                                'where' (
                                                    aggr_score(Score1,Score2,Score),
                                                    retract(composed(lla(X,meta(T1,Score1))))
                                                ).
r6 'rule:' composed(lla(X, meta(T2, Score))) <- composed(lla(X,meta(T1,Score1))) 'seq' composed(lla(X,meta(T2, Score2))) 
                                                'where' (
                                                    aggr_score(Score1,Score2,Score),
                                                    retract(composed(lla(X,meta(T1,Score1))))
                                                ).
event_rule_property(r4,event_rule_window,5).
event_rule_property(r5,event_rule_window,5).
event_rule_property(r6,event_rule_window,5).

/*
    DOMAIN RULES
*/

%% TU DU TU DU TUDU TUDU TUDU TUDU TUDUUUUUUUUUU